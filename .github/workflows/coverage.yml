name: Test Coverage

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Measure Test Coverage
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: llvm-tools-preview
          default: true
      - name: Download Build Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            src-tauri/target/
          key: ${{ github.workflow }}-{{ runner.os }}-cargo-${{ github.ref }}-${{ github.sha }}
          restore-keys: ${{ github.workflow }}-{{ runner.os }}-cargo-${{ github.ref }}
      - name: Install grcov
        run: cargo install grcov
      - name: Build Frontend
        run: npm install && npm run build
      - name: Run Tests
        run: cargo test --no-fail-fast
        working-directory: src-tauri
        env:
          RUSTFLAGS: "-Cinstrument-coverage"
      - name: Gather Results
        run: >
          grcov
          .
          -s .
          -t lcov
          -o coverage.txt
          --llvm
          --branch
          --ignore-not-existing
          --ignore src/mock.rs
          --keep-only src/**
          --binary-path ./target/debug
          --excl-line "#\[derive\("
          --excl-br-line "#\[derive\("
          --excl-start "mod tests \{"
          --excl-br-start "mod tests \{"
        working-directory: src-tauri
      - name: Upload Results
        uses: codecov/codecov-action@v2
        with:
          file: src-tauri/coverage.txt
          fail_ci_if_error: true
