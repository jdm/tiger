on:
  workflow_dispatch:
    inputs:
      versionNumber:
        description: "User-facing version number (eg: 0.3.0)"
        required: true

name: Make Release

jobs:
  prepare-release:
    name: Setup Release
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.create-release.outputs.id }}

    steps:
      - name: Merge to release branch
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: release
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: release
      - name: Add <version number> git tag
        run: |
          git config --global user.name ${{ github.actor }}
          git config --global user.email "<>"
          git tag -f -a ${{ github.event.inputs.versionNumber }} -m "Release ${{ github.event.inputs.versionNumber }}"
          git push -f --tags
      - name: Create Github release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          name: Tiger ${{ github.event.inputs.versionNumber }}
          tag_name: ${{ github.event.inputs.versionNumber }}
          target_commitish: release
          draft: true

  build-windows-binaries:
    name: Build Windows Binaries
    runs-on: windows-latest
    needs: prepare-release
    outputs:
      WINDOWS_ASSETS: ${{ steps.upload-binaries.outputs.assets }}

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: release
      - name: Update version in tauri.conf.json
        uses: jossef/action-set-json-field@v2
        with:
          file: src-tauri/tauri.conf.json
          field: package.version
          value: ${{ github.event.inputs.versionNumber }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install frontend dependencies
        run: npm install
      - name: Install tauri CLI
        run: cargo install tauri-cli
      - name: Build binaries
        run: cargo tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      - name: Upload binaries
        id: upload-binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.versionNumber }}
          files: src-tauri/target/release/bundle/*.*

  generate-update-manifest:
    name: Generate Update Manifest
    runs-on: windows-latest
    needs: build-windows-binaries

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: release
      - name: Create release Manifest
        run: src-tauri/distribution/generate-update-manifest.ps1
        env:
          WINDOWS_ASSETS: ${{ needs.build-windows-binaries.outputs.WINDOWS_ASSETS }}
          TIGER_VERSION: ${{ github.event.inputs.versionNumber }}
      - name: Upload manifest
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.versionNumber }}
          files: update-manifest.json
