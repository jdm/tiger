on:
  workflow_dispatch:
    inputs:
      versionNumber:
        description: "User-facing version number (eg: 0.3.0)"
        required: true

name: Make Release

jobs:
  prepare-release:
    name: Setup Release
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.create-release.outputs.id }}
      RELEASE_ASSETS: ${{ steps.create-release.outputs.assets }}

    steps:
      - name: Merge to release branch
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: release
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: release
      - name: Add <version number> git tag
        run: |
          git config --global user.name ${{ github.actor }}
          git config --global user.email "<>"
          git tag -f -a ${{ github.event.inputs.versionNumber }} -m "Release ${{ github.event.inputs.versionNumber }}"
          git push -f --tags
      - name: Create Github release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          name: Tiger ${{ github.event.inputs.versionNumber }}
          tag_name: ${{ github.event.inputs.versionNumber }}
          target_commitish: release
          draft: true

  build_windows_binaries:
    name: Build Windows Binaries
    runs-on: windows-latest
    needs: prepare-release

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: release
      - name: Update version in tauri.conf.json
        uses: jossef/action-set-json-field@v2
        with:
          file: src-tauri/tauri.conf.json
          field: package.version
          value: ${{ github.event.inputs.versionNumber }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Install frontend dependencies
        run: npm install
      - name: Build binaries
        uses: tauri-apps/tauri-action@v0
        with:
          releaseId: ${{ needs.prepare-release.outputs.RELEASE_ID }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

  generate_update_manifest:
    name: Generate Update Manifest
    runs-on: windows-latest
    needs: build_windows_binaries

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: release
      - name: Create release Manifest
        run: src-tauri/distribution/generate-update-manifest.ps1
        with:
          RELEASE_ASSETS: ${{ needs.prepare-release.outputs.RELEASE_ASSETS }}
          TIGER_VERSION: ${{ github.event.inputs.versionNumber }}
      - name: Create Github release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.versionNumber }}
          files: update-manifest.json
